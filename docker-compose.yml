version: '3.4'

services:
  catalogdb:
    image: postgres
    container_name: catalogdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    restart: always
    ports:
        - "5433:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data/ 
      
  userdb:
    image: postgres
    container_name: userdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=UserDb
    restart: always
    ports:
        - "5434:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data/ 

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  paymentdb:
    image: mcr.microsoft.com/mssql/server
    container_name: paymentdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=SwN12345678
    restart: always
    ports:
      - "1433:1433"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

  catalog.api:
    build:
      context: .
      dockerfile: ./Services/Catalog/Catalog.API/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=catalogdb;Port=5433;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  user.api:
    build:
      context: .
      dockerfile: ./Services/Basket/Basket.API/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=userdb;Port=5434;Database=UserDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=redis:6379
      - GrpcSettings__DiscountUrl=https://identity:8081
      - MessageBroker__Host=amqp://rabbitmq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      - userdb
      - redis
      - identity
      - rabbitmq
    ports:
      - "6001:8080"
      - "6061:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  identity:
    build:
      context: .
      dockerfile: ./Services/Discount/Discount.Grpc/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Data Source=identitydb
    ports:
      - "6002:8080"
      - "6062:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  payment.api:
    build:
      context: .
      dockerfile: ./Services/Ordering/Ordering.API/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=paymentdb;Database=PaymentDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=amqp://ecommerce-mq:5672
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
      - FeatureManagement__OrderFullfilment=false
    depends_on:
      - paymentdb
      - rabbitmq
    ports:
      - "6003:8080"
      - "6063:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  apigateway:
    build:
      context: .
      dockerfile: ./ApiGateways/YarpApiGateway/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - catalog.api
      - user.api
      - payment.api
    ports:
      - "6004:8080"
      - "6064:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  music.web:
    build:
      context: .
      dockerfile: ./WebApps/Shopping.Web/Dockerfile
    command: dotnet dev-certs https
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ApiSettings__GatewayAddress=http://apigateway:8080
    depends_on:
      - apigateway
    ports:
      - "6005:8080"
      - "6065:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      
volumes:
  postgres_catalog:
  postgres_basket:
